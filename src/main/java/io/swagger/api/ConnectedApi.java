/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-09-18T13:22:20.760Z[GMT]")
@Api(value = "connected", description = "the connected API")
public interface ConnectedApi {

    @ApiOperation(value = "Checks if the source and destination are connected", nickname = "connected", notes = "By passing in the origin and destination options, you can check if they are connected ", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK response with connected status as 'yes' or 'no'", response = String.class) })
    @RequestMapping(value = "/connected",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<String> connected(@NotNull @ApiParam(value = "Origin place to check the connection route from", required = true) @Valid @RequestParam(value = "origin", required = true) String origin
,@NotNull @ApiParam(value = "Destination place to check the connection route to", required = true) @Valid @RequestParam(value = "destination", required = true) String destination
);

}

